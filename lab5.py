# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1km_qJ0DYLJ5N6A-wZyRjiRHr9oj_1bXy
"""

import numpy as np
from matplotlib import mlab
import pylab as plt
import math

x0 = 0
y0 = 0.1
N = 10
h = 1/N

xlist = mlab.frange (0, 1, h)

def dify(x,y):
	return 50 * y * (x-0.6) * (x-0.85)

def dif2y(x,y):
  return 50*(dify(x,y)*(x-0.6)*(x-0.85) + y*(x-0.85) + y*(x-0.6))

def dif3y(x,y):
  return 50*(dif2y(x,y)*(x-0.85)*(x-0.6) + 
             2*dify(x,y)*(x-0.85) +
             2*dify(x,y)*(x-0.6) + 2*y)

def dif4y(x,y):
  return 50*(dif3y(x,y)*(x-0.85)*(x-0.6) +
             3*dif2y(x,y)*(x-0.85) + 
             3*dif2y(x,y)*(x-0.6) + 
             6*dify(x,y))

def Euler():
  y = y0
  listEu = []
  for i in range (N+1):
    y = y + h * dify(x0 + i * h,y)
    listEu.append(y)
  return listEu

def Cauchy():
  y = y0
  listCa = []
  for i in range (N+1):
    y = y + h*dify(x0 + i*h + h/2, y + h/2 * dify(x0 + i*h, y))
    listCa.append(y)
  return listCa


def Taylor4():
  y = y0
  listT4 = []
  for i in range (N+1):
    y = y + (h*dify(x0 + i*h, y) + (h**2/2)*dif2y(x0 + i*h, y) + 
             (h**3/6)*dif3y(x0+i*h, y) + (h**4/24)*dif4y(x0+i*h, y))
    listT4.append(y)
  return listT4

ylist = [0.1*math.exp(x *(25.5 - 36.25*x + 16.6667*x*x)) for x in xlist] # точное решение

print(ylist)
print(Cauchy())
print(Euler())

plt.plot (xlist, Euler())
plt.plot(xlist, ylist)
plt.plot (xlist, Cauchy())
plt.plot (xlist, Taylor4())

plt.savefig('foo.png', bbox_inches='tight')